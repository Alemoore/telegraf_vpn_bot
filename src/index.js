import { Telegraf, session, Markup } from 'telegraf';
import dotenv from 'dotenv';
import mongoose from 'mongoose';
import { createUser, getUserKeys } from './services/api.js';

dotenv.config();

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB
mongoose.connect(process.env.MONGODB_URI)
    .then(() => console.log('‚úì Connected to MongoDB'))
    .catch(err => console.error('‚úó MongoDB connection error:', err));

const bot = new Telegraf(process.env.BOT_TOKEN);

console.log('Initializing bot...');
console.log('Bot token:', process.env.BOT_TOKEN ? '‚úì Token set' : '‚úó Token missing');
console.log('Provider token:', process.env.PROVIDER_TOKEN ? '‚úì Token set' : '‚úó Token missing');
console.log('Hiddify API key:', process.env.HIDDIFY_API_KEY ? '‚úì Key set' : '‚úó Key missing');

// Keyboards
const mainMenuKeyboard = Markup.keyboard([
    ['üõí –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è'],
    ['üîë –ú–æ–∏ –∫–ª—é—á–∏'],
    ['‚ùì –ü–æ–º–æ—â—å']
]).resize();

const selectTariffKeyboard = Markup.keyboard([
    ['üí´ –¢–∞—Ä–∏—Ñ 1 –º–µ—Å—è—Ü'],
    ['‚≠êÔ∏è –¢–∞—Ä–∏—Ñ 3 –º–µ—Å—è—Ü–∞'],
    ['üåü –¢–∞—Ä–∏—Ñ 6 –º–µ—Å—è—Ü–µ–≤'],
    ['üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'],
]).resize();

const helpMenuKeyboard = Markup.keyboard([
    ['üì± –ö–∞–∫ –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è'],
    ['‚ùå –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç VPN'],
    ['üë®‚Äçüíª –°–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π'],
    ['üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é']
]).resize();

const deviceSelectionKeyboard = Markup.keyboard([
    ['üì± Android', 'üì± iOS', 'üíª Windows'],
    ['üíª MacOS', 'üì∫ AndroidTV', 'üì∫ AppleTV'],
    ['‚¨ÖÔ∏è –ù–∞–∑–∞–¥', 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é']
]).resize();

const cancelPaymentKeyboard = Markup.keyboard([
    ['‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –æ–ø–ª–∞—Ç—É']
]).resize();

// Middleware
bot.use(session());

// Basic commands
bot.command('start', async (ctx) => {
    console.log('Start command received from user:', ctx.from.id);
    await ctx.reply(
        'üåü –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ VPN Bot!\n\n' +
        'üîê –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ:\n' +
        '‚Ä¢ üõí –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ VPN\n' +
        '‚Ä¢ üîë –£–ø—Ä–∞–≤–ª—è—Ç—å —Å–≤–æ–∏–º–∏ –∫–ª—é—á–∞–º–∏\n' +
        '‚Ä¢ ‚ùì –ü–æ–ª—É—á–∏—Ç—å –ø–æ–º–æ—â—å\n\n' +
        'üöÄ –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –≤ –º–µ–Ω—é –Ω–∏–∂–µ:',
        mainMenuKeyboard
    );
});

bot.command('help', (ctx) => ctx.reply('–ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?'));

// Payment handling
bot.on("pre_checkout_query", async (ctx) => {
    const {id} = ctx.preCheckoutQuery;
    console.log('Pre-checkout query received:', id);
    try {
        await ctx.telegram.answerPreCheckoutQuery(id, true);
        console.log('Pre-checkout query approved');
    } catch (e) {
        console.error('Pre-checkout query error:', e);
    }
});

bot.on("successful_payment", async (ctx) => {
    console.log('Payment successful from user:', ctx.from.id);
    await ctx.reply("–û–ø–ª–∞—Ç–∞ —É—Å–ø–µ—à–Ω–∞!");
    const user_telegram_id = ctx.from.id;
    try {
        console.log('Creating user for telegram ID:', user_telegram_id);
        const result = await createUser(user_telegram_id, 1); // 1 –º–µ—Å—è—Ü
        console.log('User created:', result);
        
        const daysLeft = Math.ceil((new Date(result.expiresAt) - new Date()) / (1000 * 60 * 60 * 24));
        await ctx.reply(
            `üéâ –í–∞—à VPN –ø–æ–¥–∫–ª—é—á–µ–Ω!\n\n` +
            `–°—Å—ã–ª–∫–∞ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:\n${result.url}\n\n` +
            `–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è: –¥–æ ${new Date(result.expiresAt).toLocaleDateString()}\n` +
            `(${daysLeft} –¥–Ω–µ–π)\n\n` +
            `–°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —ç—Ç—É —Å—Å—ã–ª–∫—É, –æ–Ω–∞ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ VPN.`,
            mainMenuKeyboard
        );
    } catch (error) {
        console.error('Error processing payment:', error);
        await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø–ª–∞—Ç–µ–∂–∞');
    }
});

// Menu handlers
bot.hears('üõí –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è', (ctx) => {
    console.log('Connect request from user:', ctx.from.id);
    ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∞—Ä–∏—Ñ:', selectTariffKeyboard);
});

bot.hears('üîë –ú–æ–∏ –∫–ª—é—á–∏', async (ctx) => {
    console.log('User keys requested by:', ctx.from.id);
    try {
        const keys = await getUserKeys(ctx.from.id);
        
        if (keys.length === 0) {
            await ctx.reply('–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–ª—é—á–µ–π. –ù–∞–∂–º–∏—Ç–µ "üõí –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è" —á—Ç–æ–±—ã –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ VPN.');
            return;
        }

        const keysMessage = keys.map((key, index) => {
            const daysLeft = Math.ceil((new Date(key.expiresAt) - new Date()) / (1000 * 60 * 60 * 24));
            return `üîë –ö–ª—é—á ${index + 1}:\n` +
                   `–°–æ–∑–¥–∞–Ω: ${new Date(key.createdAt).toLocaleDateString()}\n` +
                   `–ò—Å—Ç–µ–∫–∞–µ—Ç: ${new Date(key.expiresAt).toLocaleDateString()}\n` +
                   `–û—Å—Ç–∞–ª–æ—Å—å –¥–Ω–µ–π: ${daysLeft}\n` +
                   `–°—Å—ã–ª–∫–∞: ${key.url}\n`;
        }).join('\n');

        await ctx.reply('–í–∞—à–∏ –∞–∫—Ç–∏–≤–Ω—ã–µ –∫–ª—é—á–∏:\n\n' + keysMessage);
    } catch (error) {
        console.error('Error getting user keys:', error);
        await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–ª—é—á–µ–π. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    }
});

bot.hears('‚ùì –ü–æ–º–æ—â—å', async (ctx) => {
    await ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –ø–æ–º–æ—â–∏:', helpMenuKeyboard);
});

const userInvoiceMessages = new Map();

bot.hears('üí´ –¢–∞—Ä–∏—Ñ 1 –º–µ—Å—è—Ü', async (ctx) => {
    console.log('1 month tariff selected by user:', ctx.from.id);
    await ctx.reply('–ò–Ω–≤–æ–π—Å –¥–ª—è –æ–ø–ª–∞—Ç—ã:', cancelPaymentKeyboard);

    const invoiceMessage = await ctx.replyWithInvoice({
        currency: "XTR",
        prices: [{label: "VPN –Ω–∞ –º–µ—Å—è—Ü", amount: 1}],
        title: "–ë—ã—Å—Ç—Ä—ã–π –∏ –Ω–∞–¥–µ–∂–Ω—ã–π VPN",
        provider_token: process.env.PROVIDER_TOKEN || "",
        description: "–°–≤–æ–±–æ–¥–Ω—ã–π –¥–æ—Å—Ç—É–ø –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –Ω–∞ –º–µ—Å—è—Ü",
        payload: '–¢–∞—Ä–∏—Ñ 1 –º–µ—Å—è—Ü',
    });
    
    userInvoiceMessages.set(ctx.from.id, invoiceMessage.message_id);
});

bot.hears('‚≠êÔ∏è –¢–∞—Ä–∏—Ñ 3 –º–µ—Å—è—Ü–∞', async (ctx) => {
    console.log('3 month tariff selected by user:', ctx.from.id);
    await ctx.reply('–ò–Ω–≤–æ–π—Å –¥–ª—è –æ–ø–ª–∞—Ç—ã:', cancelPaymentKeyboard);

    const invoiceMessage = await ctx.replyWithInvoice({
        currency: "XTR",
        prices: [{label: "VPN –Ω–∞ 3 –º–µ—Å—è—Ü–∞", amount: 3}],
        title: "–ë—ã—Å—Ç—Ä—ã–π –∏ –Ω–∞–¥–µ–∂–Ω—ã–π VPN",
        provider_token: process.env.PROVIDER_TOKEN || "",
        description: "–°–≤–æ–±–æ–¥–Ω—ã–π –¥–æ—Å—Ç—É–ø –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –Ω–∞ 3 –º–µ—Å—è—Ü–∞",
        payload: '–¢–∞—Ä–∏—Ñ 3 –º–µ—Å—è—Ü–∞',
    });
    
    userInvoiceMessages.set(ctx.from.id, invoiceMessage.message_id);
});

bot.hears('üåü –¢–∞—Ä–∏—Ñ 6 –º–µ—Å—è—Ü–µ–≤', async (ctx) => {
    console.log('6 month tariff selected by user:', ctx.from.id);
    await ctx.reply('–ò–Ω–≤–æ–π—Å –¥–ª—è –æ–ø–ª–∞—Ç—ã:', cancelPaymentKeyboard);

    const invoiceMessage = await ctx.replyWithInvoice({
        currency: "XTR",
        prices: [{label: "VPN –Ω–∞ 6 –º–µ—Å—è—Ü–µ–≤", amount: 6}],
        title: "–ë—ã—Å—Ç—Ä—ã–π –∏ –Ω–∞–¥–µ–∂–Ω—ã–π VPN",
        provider_token: process.env.PROVIDER_TOKEN || "",
        description: "–°–≤–æ–±–æ–¥–Ω—ã–π –¥–æ—Å—Ç—É–ø –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –Ω–∞ 6 –º–µ—Å—è—Ü–µ–≤",
        payload: '–¢–∞—Ä–∏—Ñ 6 –º–µ—Å—è—Ü–µ–≤',
    });
    
    userInvoiceMessages.set(ctx.from.id, invoiceMessage.message_id);
});

bot.hears('üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', async ctx => {
    console.log('Main menu requested by user:', ctx.from.id);
    await ctx.reply('–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', mainMenuKeyboard);
});

bot.hears('üì± –ö–∞–∫ –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è', async (ctx) => {
    await ctx.reply(
        '–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é:',
        deviceSelectionKeyboard
    );
});

bot.hears('‚ùå –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç VPN', async (ctx) => {
    const userName = ctx.from.first_name || '–¥–æ—Ä–æ–≥–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
    await ctx.reply(
        `${userName}, —è –≤—Å–µ–≥–¥–∞ —Ä–∞–¥—ã –ø–æ–º–æ—á—å —Ç–µ–±–µ!\n` +
        '–ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è:\n\n' +
        '1. –£–±–µ–¥–∏—Å—å, —á—Ç–æ —É —Ç–µ–±—è –µ—Å—Ç—å –¥–µ–π—Å—Ç–≤—É—é—â–∏–π –∫–ª—é—á. –î–ª—è —ç—Ç–æ–≥–æ –ø–µ—Ä–µ–π–¥–∏ –≤ üîë–ú–æ–∏ –∫–ª—é—á–∏.\n\n' +
        '2. –ï—Å–ª–∏ –∫–ª—é—á –µ—Å—Ç—å ‚Äî —É–±–µ–¥–∏—Å—å, —á—Ç–æ –æ–Ω –ø–æ–¥–∫–ª—é—á–µ–Ω. –í üîë–ú–æ–∏ –∫–ª—é—á–∏ –≤—ã–±–µ—Ä–∏ –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª—é—á, –∞ –∑–∞—Ç–µ–º –≤—ã–±–µ—Ä–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –∏ —Å–ª–µ–¥—É–π –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏. –ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å ‚Äî –Ω–µ –±–æ–π—Å—è –ø–∏—Å–∞—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.\n\n' +
        '3. –ï—Å–ª–∏ –Ω–µ –ø—Ä–æ—à–ª–∞ –æ–ø–ª–∞—Ç–∞ ‚Äî —Å–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—å, –Ω–µ –ø–æ—è–≤–∏–ª—Å—è –ª–∏ –∫–ª—é—á –≤ üîë–ú–æ–∏ –∫–ª—é—á–∏. –ï—Å–ª–∏ –¥–µ–Ω—å–≥–∏ —Å–ø–∏—Å–∞–ª–∏—Å—å, –∞ –∫–ª—é—á –Ω–µ –ø–æ—è–≤–∏–ª—Å—è ‚Äî –Ω–∞–ø–∏—à–∏ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.\n\n' +
        '–ù–µ –ø–æ–º–æ–≥–ª–æ? –ü–∏—à–∏ @support_username.\n' +
        '–° —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º –ø–æ–º–æ–∂–µ–º —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—èüê•',
        helpMenuKeyboard
    );
});

bot.hears('üë®‚Äçüíª –°–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π', async (ctx) => {
    await ctx.reply(
        '–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã, –Ω–∞–ø–∏—à–∏—Ç–µ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É: @support_username\n' +
        '–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏: 24/7',
        helpMenuKeyboard
    );
});

bot.hears('üì± Android', async (ctx) => {
    await ctx.reply(
        '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è Android:\n\n' +
        '1Ô∏è‚É£ –ù–∞–∂–º–∏ –Ω–∞ –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞, —á—Ç–æ–±—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ.\n' +
        '2Ô∏è‚É£ –£—Å—Ç–∞–Ω–æ–≤–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ V2rayNG (https://play.google.com/store/apps/details?id=com.v2ray.ang&hl=ru).\n' +
        '3Ô∏è‚É£ –ó–∞–ø—É—Å—Ç–∏ –ø—Ä–æ–≥—Ä–∞–º–º—É V2rayNG –∏ –Ω–∞–∂–º–∏ ‚ûï –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É.\n' +
        '4Ô∏è‚É£ –í—ã–±–µ—Ä–∏ –ò–º–ø–æ—Ä—Ç –∏–∑ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞.\n' +
        '5Ô∏è‚É£ –ù–∞–∂–º–∏ –∫—Ä—É–≥–ª—É—é –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è.',
        deviceSelectionKeyboard
    );
});

bot.hears('üì± iOS', async (ctx) => {
    await ctx.reply(
        '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è iOS:\n\n' +
        '1Ô∏è‚É£ –ù–∞–∂–º–∏ –Ω–∞ –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞, —á—Ç–æ–±—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ.\n\n' +
        '2Ô∏è‚É£ –£—Å—Ç–∞–Ω–æ–≤–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Streisand –∏–∑ App Store.\n\n' +
        '3Ô∏è‚É£ –ó–∞–ø—É—Å—Ç–∏ Streisand –∏ –Ω–∞–∂–º–∏ + –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É.\n\n' +
        '4Ô∏è‚É£ –í—ã–±–µ—Ä–∏ –∏–º–ø–æ—Ä—Ç –∏–∑ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞.\n\n' +
        '5Ô∏è‚É£ –ù–∞–∂–º–∏ Start –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è.',
        deviceSelectionKeyboard
    );
});

bot.hears('üíª Windows', async (ctx) => {
    await ctx.reply(
        '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è Windows:\n\n' +
        '1Ô∏è‚É£ –ù–∞–∂–º–∏ –Ω–∞ –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞, —á—Ç–æ–±—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ.\n\n' +
        '2Ô∏è‚É£ –°–∫–∞—á–∞–π –∏ —Ä–∞—Å–ø–∞–∫—É–π Hiddify (https://github.com/hiddify/hiddify-next/releases/download/v2.3.1/Hiddify-Windows-Portable-x64.zip).\n\n' +
        '3Ô∏è‚É£ –ó–∞–ø—É—Å—Ç–∏ Hiddify.exe —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.\n\n' +
        '4Ô∏è‚É£ –ù–∞–∂–º–∏ ‚ûï –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É –∏ –≤—ã–±–µ—Ä–∏ –î–æ–±–∞–≤–∏—Ç—å –∏–∑ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞.\n\n' +
        '5Ô∏è‚É£ –ü–µ—Ä–µ–π–¥–∏ –≤ –ë—ã—Å—Ç—Ä—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É (—Å–ª–µ–≤–∞ –æ—Ç ‚ûï) –∏ –≤—ã–±–µ—Ä–∏ VPN (—ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω—ã–π).\n\n' +
        '6Ô∏è‚É£ –ù–∞–∂–º–∏ –±–æ–ª—å—à—É—é –∫—Ä—É–≥–ª—É—é –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è.',
        deviceSelectionKeyboard
    );
});

bot.hears('üíª MacOS', async (ctx) => {
    await ctx.reply(
        '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è MacOS:\n\n' +
        '1Ô∏è‚É£ –ù–∞–∂–º–∏ –Ω–∞ –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞, —á—Ç–æ–±—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ.\n\n' +
        '2Ô∏è‚É£ –£—Å—Ç–∞–Ω–æ–≤–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ V2Box –∏–∑ App Store.\n\n' +
        '3Ô∏è‚É£ –ó–∞–ø—É—Å—Ç–∏ V2Box –∏ –Ω–∞–∂–º–∏ + –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É.\n\n' +
        '4Ô∏è‚É£ –í—ã–±–µ—Ä–∏ –∏–º–ø–æ—Ä—Ç –∏–∑ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞.\n\n' +
        '5Ô∏è‚É£ –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è.',
        deviceSelectionKeyboard
    );
});

bot.hears('üì∫ AndroidTV', async (ctx) => {
    await ctx.reply(
        '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è Android TV:\n\n' +
        '1Ô∏è‚É£ –ù–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–µ: –Ω–∞–∂–º–∏ –Ω–∞ –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞ –∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä—É–π QR-–∫–æ–¥ –Ω–∞ —Å–∞–π—Ç–µ code-qr.ru\n\n' +
        '2Ô∏è‚É£ –ù–∞ –¢–í: —É—Å—Ç–∞–Ω–æ–≤–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ V2rayNG –∏–∑ Google Play Store\n\n' +
        '3Ô∏è‚É£ –°–ø–æ—Å–æ–±—ã –ø–µ—Ä–µ–¥–∞—á–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:\n' +
        '   ‚Ä¢ –°–¥–µ–ª–∞–π —Ñ–æ—Ç–æ QR-–∫–æ–¥–∞ –∏ –æ—Ç–∫—Ä–æ–π –µ–≥–æ –≤ –≥–∞–ª–µ—Ä–µ–µ –Ω–∞ –¢–í\n' +
        '   ‚Ä¢ –û—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ QR-–∫–æ–¥–∞ —á–µ—Ä–µ–∑ Telegram –Ω–∞ –¢–í\n' +
        '   ‚Ä¢ –ó–∞–≥—Ä—É–∑–∏ —Ñ–æ—Ç–æ QR-–∫–æ–¥–∞ –Ω–∞ Google –§–æ—Ç–æ –∏ –æ—Ç–∫—Ä–æ–π –Ω–∞ –¢–í\n\n' +
        '4Ô∏è‚É£ –í –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ V2rayNG –Ω–∞–∂–º–∏ ‚ûï –∏ –≤—ã–±–µ—Ä–∏ "–°–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å QR –∫–æ–¥"\n\n' +
        '5Ô∏è‚É£ –ù–∞–≤–µ–¥–∏ —Å–∫–∞–Ω–µ—Ä –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å QR-–∫–æ–¥–æ–º\n\n' +
        '6Ô∏è‚É£ –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞–∂–º–∏ –∫—Ä—É–≥–ª—É—é –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è',
        deviceSelectionKeyboard
    );
});

bot.hears('üì∫ AppleTV', async (ctx) => {
    await ctx.reply(
        '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è Apple TV\n' +
        '‚ö†Ô∏è –ü–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–ª–∞—Ç–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Shadowrocket, —Ä–∞–∑–æ–≤–∞—è –ø–æ–∫—É–ø–∫–∞ 249 —Ä—É–±–ª–µ–π!\n\n' +
        '–ù–∞ iPhone —Å —Ç–µ–º –∂–µ Apple ID, —á—Ç–æ –∏ –Ω–∞ —Ç–µ–ª–µ–≤–∏–∑–æ—Ä–µ:\n' +
        '1Ô∏è‚É£ –ù–∞–∂–º–∏ –Ω–∞ –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞, —á—Ç–æ–±—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ.\n\n' +
        '2Ô∏è‚É£ –°–≥–µ–Ω–µ—Ä–∏—Ä—É–π –∏–∑ –Ω–µ–≥–æ QR-–∫–æ–¥ —Å –ø–æ–º–æ—â—å—é –ª—é–±–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä, code-qr.ru (https://code-qr.ru/), –∏ —Å–æ—Ö—Ä–∞–Ω–∏ –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫—É iPhone.\n\n' +
        '3Ô∏è‚É£ –£—Å—Ç–∞–Ω–æ–≤–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Shadowrocket –∏–∑ App Store.\n\n' +
        '4Ô∏è‚É£ –í –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ Shadowrocket –Ω–∞–∂–º–∏ –Ω–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ (–≤ –ª–µ–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É) –∏ –≤—ã–±–µ—Ä–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å QR –∫–æ–¥–æ–º.\n\n' +
        '5Ô∏è‚É£ –ü–µ—Ä–µ–π–¥–∏ –Ω–∞ –≤–∫–ª–∞–¥–∫—É –î–∞–Ω–Ω—ã–µ (–≤–Ω–∏–∑—É), —Ç–∞–º –≤—ã–±–µ—Ä–∏ Apple TV, –°–µ—Ä–≤–µ—Ä—ã.\n\n' +
        '–î–∞–ª–µ–µ –Ω–∞ —Ç–µ–ª–µ–≤–∏–∑–æ—Ä–µ:\n' +
        '6Ô∏è‚É£ –£—Å—Ç–∞–Ω–æ–≤–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Shadowrocket –∏–∑ App Store.\n\n' +
        '7Ô∏è‚É£ –í—ã–±–µ—Ä–∏ –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É –∫–Ω–æ–ø–∫—É —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º —Å–µ—Ç–∏ –∏ –Ω–∞–∂–º–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –ø—É–Ω–∫—Ç –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–µ.',
        deviceSelectionKeyboard
    );
});

bot.hears('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', async (ctx) => {
    await ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –ø–æ–º–æ—â–∏:', helpMenuKeyboard);
});

bot.hears('‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –æ–ø–ª–∞—Ç—É', async (ctx) => {
    console.log('Payment cancelled by user:', ctx.from.id);
    
    const invoiceMessageId = userInvoiceMessages.get(ctx.from.id);
    if (invoiceMessageId) {
        try {
            await ctx.deleteMessage(invoiceMessageId);
        } catch (error) {
            console.error('Error deleting invoice message:', error);
        }
        userInvoiceMessages.delete(ctx.from.id);
    }

    await ctx.reply('üîÑ –í—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π —Ç–∞—Ä–∏—Ñ:', selectTariffKeyboard);
});

// Error handling
bot.catch((err, ctx) => {
    console.error('Bot error:', err);
    ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
});

// Start the bot
const startBot = async () => {
    try {
        await bot.launch();
        console.log('‚úì Bot successfully started!');
        console.log('‚úì Bot username:', bot.botInfo?.username);
    } catch (error) {
        console.error('‚úó Failed to start bot:', error);
    }
};

startBot();
